// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: egg.proto

package eggclient

import (
	"context"

	"CCMO/gozero/blog/application/egg/rpc/egg"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EggRequest  = egg.EggRequest
	EggResponse = egg.EggResponse

	Egg interface {
		Comment(ctx context.Context, in *EggRequest, opts ...grpc.CallOption) (*EggResponse, error)
	}

	defaultEgg struct {
		cli zrpc.Client
	}
)

func NewEgg(cli zrpc.Client) Egg {
	return &defaultEgg{
		cli: cli,
	}
}

func (m *defaultEgg) Comment(ctx context.Context, in *EggRequest, opts ...grpc.CallOption) (*EggResponse, error) {
	client := egg.NewEggClient(m.cli.Conn())
	return client.Comment(ctx, in, opts...)
}
